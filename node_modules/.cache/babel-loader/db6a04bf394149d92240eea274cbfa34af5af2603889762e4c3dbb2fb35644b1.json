{"ast":null,"code":"import _slicedToArray from\"D:/IMDB/movie/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{FaSearch}from'react-icons/fa';import\"./SearchBar.css\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SearchBar(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),results=_useState4[0],setResults=_useState4[1];var fetchdata=function fetchdata(event){var inputValue=event.target.value;setQuery(inputValue);// Moved this up to update the query immediately\nif(inputValue.trim()===''){setResults([]);// Clear results when input is empty\nreturn;}fetch(\"https://api.themoviedb.org/3/search/movie?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US&query=\".concat(inputValue)).then(function(res){return res.json();}).then(function(data){if(!data.errors){setResults(data.results);}else{setResults([]);};}).catch(function(error){console.error(\"Error fetching data:\",error);setResults([]);// Handle fetch errors by clearing results\n});};return/*#__PURE__*/_jsxs(\"div\",{className:\"taskbar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-box\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search...\",value:query,onChange:fetchdata}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",children:/*#__PURE__*/_jsx(FaSearch,{})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"searchcontainer\",children:results.length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"ul\",children:results.map(function(movie){return/*#__PURE__*/_jsx(Link,{to:\"/movie/\".concat(movie.id),style:{textDecoration:\"none\"},children:/*#__PURE__*/_jsx(\"li\",{children:movie.title})},movie.id);})})})]});}export default SearchBar;","map":{"version":3,"names":["React","useState","FaSearch","Link","jsx","_jsx","jsxs","_jsxs","SearchBar","_useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","results","setResults","fetchdata","event","inputValue","target","value","trim","fetch","concat","then","res","json","data","errors","catch","error","console","className","children","type","placeholder","onChange","length","map","movie","to","id","style","textDecoration","title"],"sources":["D:/IMDB/movie/src/components/searchBar/SearchBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport \"./SearchBar.css\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction SearchBar() {\r\n  const [query, setQuery] = useState('');\r\n  const [results, setResults] = useState([])\r\n\r\n  const fetchdata = (event) => {\r\n    const inputValue = event.target.value;\r\n    setQuery(inputValue); // Moved this up to update the query immediately\r\n\r\n    if (inputValue.trim() === '') {\r\n      setResults([]); // Clear results when input is empty\r\n      return;\r\n    }\r\n\r\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US&query=${inputValue}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (!data.errors) {\r\n          setResults(data.results);\r\n        } else {\r\n          setResults([]);\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        setResults([]); // Handle fetch errors by clearing results\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"taskbar\">\r\n      <div className=\"search-box\">\r\n        <input type=\"text\" placeholder=\"Search...\" value={query} onChange={fetchdata} />\r\n        <button type=\"button\"><FaSearch /></button>\r\n      </div>\r\n      <div className='searchcontainer'>\r\n        {results.length > 0 && (\r\n          <ul className='ul'>\r\n            {results.map((movie) => (\r\n              <Link key={movie.id} to={`/movie/${movie.id}`} style={{ textDecoration: \"none\" }}>\r\n                <li>{movie.title}</li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n"],"mappings":"mGAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,QAAQ,KAAQ,gBAAgB,CACzC,MAAO,iBAAiB,CACxB,OAASC,IAAI,KAAQ,kBAAkB,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEvC,QAAS,CAAAC,SAASA,CAAA,CAAG,CACnB,IAAAC,SAAA,CAA0BR,QAAQ,CAAC,EAAE,CAAC,CAAAS,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IACtB,IAAAI,UAAA,CAA8Bb,QAAQ,CAAC,EAAE,CAAC,CAAAc,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAnCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAE1B,GAAM,CAAAG,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,KAAK,CAAK,CAC3B,GAAM,CAAAC,UAAU,CAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CACrCT,QAAQ,CAACO,UAAU,CAAC,CAAE;AAEtB,GAAIA,UAAU,CAACG,IAAI,EAAE,GAAK,EAAE,CAAE,CAC5BN,UAAU,CAAC,EAAE,CAAC,CAAE;AAChB,OACF,CAEAO,KAAK,4GAAAC,MAAA,CAA4GL,UAAU,EAAG,CAC3HM,IAAI,CAAC,SAACC,GAAG,QAAK,CAAAA,GAAG,CAACC,IAAI,EAAE,GAAC,CACzBF,IAAI,CAAC,SAACG,IAAI,CAAK,CACd,GAAI,CAACA,IAAI,CAACC,MAAM,CAAE,CAChBb,UAAU,CAACY,IAAI,CAACb,OAAO,CAAC,CAC1B,CAAC,IAAM,CACLC,UAAU,CAAC,EAAE,CAAC,CAChB,CAAC,CACH,CAAC,CAAC,CACDc,KAAK,CAAC,SAACC,KAAK,CAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5Cf,UAAU,CAAC,EAAE,CAAC,CAAE;AAClB,CAAC,CAAC,CACN,CAAC,CAED,mBACEV,KAAA,QAAK2B,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtB5B,KAAA,QAAK2B,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB9B,IAAA,UAAO+B,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,WAAW,CAACf,KAAK,CAAEV,KAAM,CAAC0B,QAAQ,CAAEpB,SAAU,EAAG,cAChFb,IAAA,WAAQ+B,IAAI,CAAC,QAAQ,CAAAD,QAAA,cAAC9B,IAAA,CAACH,QAAQ,IAAG,EAAS,GACvC,cACNG,IAAA,QAAK6B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC7BnB,OAAO,CAACuB,MAAM,CAAG,CAAC,eACjBlC,IAAA,OAAI6B,SAAS,CAAC,IAAI,CAAAC,QAAA,CACfnB,OAAO,CAACwB,GAAG,CAAC,SAACC,KAAK,qBACjBpC,IAAA,CAACF,IAAI,EAAgBuC,EAAE,WAAAjB,MAAA,CAAYgB,KAAK,CAACE,EAAE,CAAG,CAACC,KAAK,CAAE,CAAEC,cAAc,CAAE,MAAO,CAAE,CAAAV,QAAA,cAC/E9B,IAAA,OAAA8B,QAAA,CAAKM,KAAK,CAACK,KAAK,EAAM,EADbL,KAAK,CAACE,EAAE,CAEZ,EACR,CAAC,EAEL,EACG,GACF,CAEV,CAEA,cAAe,CAAAnC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}