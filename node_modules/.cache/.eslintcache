[{"D:\\IMDB\\movie\\src\\index.js":"1","D:\\IMDB\\movie\\src\\App.js":"2","D:\\IMDB\\movie\\src\\components\\header\\Header.js":"3","D:\\IMDB\\movie\\src\\pages\\home\\Home.js":"4","D:\\IMDB\\movie\\src\\components\\movieList\\MovieList.js":"5","D:\\IMDB\\movie\\src\\components\\card\\Card.js":"6","D:\\IMDB\\movie\\src\\pages\\movieDetail\\Movie.js":"7","D:\\IMDB\\movie\\src\\components\\searchBar\\SearchBar.js":"8","D:\\IMDB\\movie\\src\\components\\footer\\Footer.js":"9"},{"size":497,"mtime":1691951622318,"results":"10","hashOfConfig":"11"},{"size":708,"mtime":1691748985423,"results":"12","hashOfConfig":"11"},{"size":1735,"mtime":1691952658188,"results":"13","hashOfConfig":"11"},{"size":2031,"mtime":1691952722989,"results":"14","hashOfConfig":"11"},{"size":1046,"mtime":1691951622314,"results":"15","hashOfConfig":"11"},{"size":1484,"mtime":1691952490049,"results":"16","hashOfConfig":"11"},{"size":3876,"mtime":1691952777351,"results":"17","hashOfConfig":"11"},{"size":1691,"mtime":1691953041094,"results":"18","hashOfConfig":"11"},{"size":283,"mtime":1691952574946,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q3peq5",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\IMDB\\movie\\src\\index.js",[],[],"D:\\IMDB\\movie\\src\\App.js",[],[],"D:\\IMDB\\movie\\src\\components\\header\\Header.js",["52","53","54","55","56"],[],"import React from 'react'\r\nimport \"./Header.css\"\r\nimport { Link} from \"react-router-dom\"\r\nimport SearchBar from '../searchBar/SearchBar'\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst Header = () => {\r\n  const { loginWithRedirect, isAuthenticated, logout, user } = useAuth0();\r\n  \r\n  return (\r\n    <div className='header'>\r\n        <Link  exact to=\"/\"><img className='header__icon' src=\"cine.png\"/></Link>\r\n      <div className='headerLeft'>\r\n        <Link  exact to=\"/movies/popular\" style={{ textDecoration: 'none' }}><span>Popular</span></Link>\r\n        <Link exact to=\"/movies/top_rated\" style={{ textDecoration: 'none' }}><span>Top Rated</span></Link>\r\n        <Link exact to=\"/movies/upcoming\" style={{ textDecoration: 'none' }}><span>UpComming</span></Link>\r\n\r\n      </div>\r\n      <div className='loginright'>\r\n        <SearchBar />\r\n\r\n        {/* log in log out by auth0 react */}\r\n        {\r\n          isAuthenticated ? (\r\n            <div className='menu-bar'>\r\n            <ul>\r\n            <li><a href=\"#\">{user.name}<i className=\"fas fa-caret-down\"></i></a>\r\n              <div className=\"dropdown-menu\">\r\n                <ul>\r\n                  <li><a href=\"#\">Your Watchlist</a></li>\r\n                  <li><a href=\"#\"></a><button className='b' onClick={() => logout({ logoutParams: { returnTo: window.location.origin } })}>\r\n                    Sign Out\r\n                  </button></li>\r\n                </ul>\r\n              </div>\r\n            </li>\r\n            </ul>\r\n            </div>\r\n\r\n          ) : (\r\n            <button className='loginbutton' onClick={() => console.log(loginWithRedirect())}>Sign In</button>\r\n          )\r\n        }\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n\r\n","D:\\IMDB\\movie\\src\\pages\\home\\Home.js",["57"],[],"import React ,{useEffect,useState} from 'react'\r\nimport \"./Home.css\"\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; \r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { Link } from 'react-router-dom';\r\nimport MovieList from '../../components/movieList/MovieList';\r\nimport Footer from '../../components/footer/Footer';\r\n\r\nconst Home = () => {\r\n    const [popularMovies,setPopularMovies]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US\")\r\n        .then(res=>res.json())\r\n        .then(data=>setPopularMovies(data.results))\r\n    },[])\r\n\r\n  return (\r\n    <>\r\n    <div className='poster'>\r\n        <Carousel\r\n            showThumbs={false}\r\n            autoPlay={true}\r\n            transitionTime={3}\r\n            infiniteLoop={true}\r\n            showStatus={false}\r\n        >\r\n            {\r\n                popularMovies.map(movie =>(\r\n                    <Link style={{textDecoration:'none',color:'white'}} to={`/movie/${movie.id}`}>\r\n                    <div className='posterImage'>\r\n                        <img src={`https://image.tmdb.org/t/p/original${movie && movie.backdrop_path}`} />\r\n                    </div>\r\n                    <div className='posterImage__overlay'>\r\n                        <div className='posterImage__title'>{movie ? movie.original_title:\"\"}</div>\r\n                        <div className='posterImage__runtime'>{movie ? movie.release_date:\"\"}\r\n                        <span className='posterImage__rating'>{movie ? movie.vote_average:\"\"}<i className='fas fa-star'/>{\" \"}\r\n                        </span>\r\n                        </div>\r\n                        <div className='posterImage__description'>{movie ? movie.overview:\"\"}</div>\r\n                    </div>\r\n                    </Link>\r\n                    )\r\n                )\r\n            }\r\n        </Carousel>\r\n        <MovieList/>\r\n        <Footer/>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home","D:\\IMDB\\movie\\src\\components\\movieList\\MovieList.js",["58","59"],[],"import React ,{useState,useEffect} from 'react'\r\nimport \"./MovieList.css\"\r\nimport {useParams} from 'react-router-dom'        //dynamically link change hoti usko lake deta\r\nimport Cards from '../card/Card'\r\n\r\nconst MovieList = () => {\r\n\r\n    const [MovieList,setMovieList] =useState([])\r\n    const {type} = useParams()\r\n\r\n    useEffect(()=>{\r\n        getData()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        getData()\r\n    },[type])\r\n\r\n    const getData =()=>{\r\n        fetch(`https://api.themoviedb.org/3/movie/${type ?type:\"popular\"}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`)\r\n        .then(res=>res.json())\r\n        .then(data=>setMovieList(data.results))\r\n    }\r\n\r\n  return (\r\n    <div className='movie__list'>\r\n        <h2 className='list__title'>{(type ? type : \"POPULAR\").toUpperCase()}</h2>\r\n        <div className=\"list__cards\">\r\n            {\r\n                MovieList.map(movie=>(\r\n                    <Cards movie={movie}/>\r\n                ))\r\n            }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieList","D:\\IMDB\\movie\\src\\components\\card\\Card.js",["60"],[],"import React ,{useEffect,useState}from 'react'\r\nimport Skeleton,{SkeletonTheme} from \"react-loading-skeleton\"\r\nimport \"./Card.css\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst Cards = ({movie}) => {\r\n    \r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 1500)\r\n    }, []) \r\n\r\n    return <>\r\n    {\r\n        isLoading\r\n        ?\r\n        <div className=\"cards\">\r\n            <SkeletonTheme baseColor=\"#202020\" highlightColor=\"#444\">\r\n                <Skeleton height={300} duration={3} />\r\n                </SkeletonTheme>\r\n        </div>\r\n        :\r\n        <Link to={`/movie/${movie.id}`} style={{textDecoration:\"none\", color:\"white\"}}>\r\n            <div className=\"cards\">\r\n                <img className=\"cards__img\" src={`https://image.tmdb.org/t/p/original${movie?movie.poster_path:\"\"}`} />\r\n                <div className=\"cards__overlay\">\r\n                    <div className=\"card__title\">{movie?movie.original_title:\"\"}</div>\r\n                    <div className=\"card__runtime\">\r\n                        {movie?movie.release_date:\"\"}\r\n                        <span className=\"card__rating\">{movie?movie.vote_average:\"\"}</span>\r\n                    </div>\r\n                    <div className=\"card__description\">{movie ? movie.overview.slice(0,118)+\"...\" : \"\"}</div>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    }\r\n    </>\r\n}\r\n\r\n\r\nexport default Cards","D:\\IMDB\\movie\\src\\pages\\movieDetail\\Movie.js",["61","62","63","64","65"],[],"import React ,{useEffect,useState}from 'react'\r\nimport \"./Movie.css\"\r\nimport {useParams} from \"react-router-dom\"\r\n\r\nconst Movie = () => {\r\n    const [currentMovieDetail,setMovie] = useState()\r\n    const {id} =useParams()\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        window.scrollTo(0,0)\r\n    }, [])\r\n    \r\n    const getData=()=>{\r\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`)\r\n        .then(res=>res.json())\r\n        .then(data=>setMovie(data))\r\n    }\r\n  return (\r\n    <div className=\"movie\">\r\n            <div className=\"movie__intro\">\r\n                <img className=\"movie__backdrop\" src={`https://image.tmdb.org/t/p/original${currentMovieDetail ? currentMovieDetail.backdrop_path : \"\"}`} />\r\n            </div>\r\n            <div className=\"movie__detail\">\r\n                <div className=\"movie__detailLeft\">\r\n                    <div className=\"movie__posterBox\">\r\n                        <img className=\"movie__poster\" src={`https://image.tmdb.org/t/p/original${currentMovieDetail ? currentMovieDetail.poster_path : \"\"}`} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"movie__detailRight\">\r\n                    <div className=\"movie__detailRightTop\">\r\n                        <div className=\"movie__name\">{currentMovieDetail ? currentMovieDetail.original_title : \"\"}</div>\r\n                        <div className=\"movie__tagline\">{currentMovieDetail ? currentMovieDetail.tagline : \"\"}</div>\r\n                        <div className=\"movie__rating\">\r\n                            {currentMovieDetail ? currentMovieDetail.vote_average: \"\"} \r\n                            <span className=\"movie__voteCount\">{currentMovieDetail ? \"(\" + currentMovieDetail.vote_count + \") votes\" : \"\"}</span>\r\n                        </div>  \r\n                        <div className=\"movie__runtime\">{currentMovieDetail ? currentMovieDetail.runtime + \" mins\" : \"\"}</div>\r\n                        <div className=\"movie__releaseDate\">{currentMovieDetail ? \"Release date: \" + currentMovieDetail.release_date : \"\"}</div>\r\n                        <div className=\"movie__genres\">\r\n                            {\r\n                                currentMovieDetail && currentMovieDetail.genres\r\n                                ? \r\n                                currentMovieDetail.genres.map(genre => (\r\n                                    <><span className=\"movie__genre\" id={genre.id}>{genre.name}</span></>\r\n                                )) \r\n                                : \r\n                                \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"movie__detailRightBottom\">\r\n                        <div className=\"synopsisText\">Synopsis</div>\r\n                        <div>{currentMovieDetail ? currentMovieDetail.overview : \"\"}</div>\r\n                        <div className=\"movie__links\">\r\n                <div className=\"movie__heading\">Useful Links :</div>\r\n                {\r\n                    currentMovieDetail && currentMovieDetail.homepage && <a href={currentMovieDetail.homepage} target=\"_blank\" style={{textDecoration: \"none\"}}><p><span className=\"movie__homeButton movie__Button\">Homepage <i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\r\n                }\r\n                {\r\n                    currentMovieDetail && currentMovieDetail.imdb_id && <a href={\"https://www.imdb.com/title/\" + currentMovieDetail.imdb_id} target=\"_blank\" style={{textDecoration: \"none\"}}><p><span className=\"movie__imdbButton movie__Button\">IMDb<i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\r\n                }\r\n            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie","D:\\IMDB\\movie\\src\\components\\searchBar\\SearchBar.js",[],[],"D:\\IMDB\\movie\\src\\components\\footer\\Footer.js",[],[],{"ruleId":"66","severity":1,"message":"67","line":12,"column":29,"nodeType":"68","endLine":12,"endColumn":75},{"ruleId":"69","severity":1,"message":"70","line":27,"column":17,"nodeType":"68","endLine":27,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":30,"column":23,"nodeType":"68","endLine":30,"endColumn":35},{"ruleId":"71","severity":1,"message":"72","line":31,"column":23,"nodeType":"68","endLine":31,"endColumn":35},{"ruleId":"69","severity":1,"message":"70","line":31,"column":23,"nodeType":"68","endLine":31,"endColumn":35},{"ruleId":"66","severity":1,"message":"67","line":32,"column":25,"nodeType":"68","endLine":32,"endColumn":107},{"ruleId":"73","severity":1,"message":"74","line":13,"column":7,"nodeType":"75","endLine":13,"endColumn":9,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"74","line":17,"column":7,"nodeType":"75","endLine":17,"endColumn":13,"suggestions":"77"},{"ruleId":"66","severity":1,"message":"67","line":28,"column":17,"nodeType":"68","endLine":28,"endColumn":120},{"ruleId":"73","severity":1,"message":"74","line":12,"column":8,"nodeType":"75","endLine":12,"endColumn":10,"suggestions":"78"},{"ruleId":"66","severity":1,"message":"67","line":22,"column":17,"nodeType":"68","endLine":22,"endColumn":157},{"ruleId":"66","severity":1,"message":"67","line":27,"column":25,"nodeType":"68","endLine":27,"endColumn":161},{"ruleId":"79","severity":1,"message":"80","line":58,"column":74,"nodeType":"68","messageId":"81","endLine":58,"endColumn":161,"fix":"82"},{"ruleId":"79","severity":1,"message":"80","line":61,"column":73,"nodeType":"68","messageId":"81","endLine":61,"endColumn":191,"fix":"83"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["84"],["85"],["86"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"87","text":"88"},{"range":"89","text":"88"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"90","fix":"94"},[3233,3233]," rel=\"noreferrer\"",[3591,3591],"Update the dependencies array to be: [getData]",{"range":"95","text":"96"},"Update the dependencies array to be: [getData, type]",{"range":"97","text":"98"},{"range":"99","text":"96"},[367,369],"[getData]",[420,426],"[getData, type]",[303,305]]